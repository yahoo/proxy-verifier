'''
Implement the Test Proxy autest common setup extension.
'''
# @file
#
# Copyright 2021, Verizon Media
# SPDX-License-Identifier: Apache-2.0
#

import os


def check_file(dir_name, file_name):
    if not os.path.isfile(file_name):
        hint = ''
        if os.path.isfile(os.path.join(dir_name, 'bin', file_name)):
            hint = "\nDid you mean '--verifier-bin {}'?".\
                format(os.path.join(dir_name, 'bin'))
        host.WriteError("verifier-server is not found. Aborting tests - "
                        "Bad build or install.{}".format(hint), show_stack=False)


if Arguments.verifier_bin is not None:
    # Add environment variables
    ENV['VERIFIER_BIN'] = Arguments.verifier_bin

if ENV['VERIFIER_BIN'] is not None:
    # Add variables for Tests
    verifier_bin = ENV['VERIFIER_BIN']
    if not os.path.isdir(verifier_bin):
        host.WriteError("--verifier-bin requires a directory", show_stack=False)
    verifier_client = os.path.join(verifier_bin, "verifier-client")
    check_file(verifier_bin, verifier_client)
    verifier_server = os.path.join(verifier_bin, "verifier-server")
    check_file(verifier_bin, verifier_server)

    new_variables = {
        'VERIFIER_BIN': verifier_bin,
        'VERIFIER_CLIENT': verifier_client,
        'VERIFIER_SERVER': verifier_server,
    }
    Variables.update(new_variables)

# Modify delay times as we always have to kill server-replay, thus there's no
# need to wait.
Variables.Autest.StopProcessLongDelaySeconds = 0
Variables.Autest.KillDelaySecond = 30
