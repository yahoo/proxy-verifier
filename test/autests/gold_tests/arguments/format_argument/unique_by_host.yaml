# *** NOTE ***
# Unlike the majority of the other replay files in this repo, the uuid values
# across the transactions is the same for each transaction.  The validations
# assume '--format {field.host}' since the uuid is the same across all
# transactions. This is intentional to test the use of other values as the key.

meta:
  version: "1.0"

sessions:
- protocol: [ { name: tcp }, {name: ip} ]
  transactions:
  - all:
      headers:
        fields:
        - [ uuid, 1 ]

    client-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.one ]
        - [ X-Request, first ]
    proxy-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.one ]
        - [ X-Request, { value: first, as: equal } ]
    server-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, first ]
    proxy-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, { value: first, as: equal } ]

  - all:
      headers:
        fields:
        - [ uuid, 1 ]

    client-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.two ]
        - [ X-Request, second ]
    proxy-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.two ]
        - [ X-Request, { value: second, as: equal } ]
    server-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, two ]
    proxy-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, { value: two, as: equal } ]

  - all:
      headers:
        fields:
        - [ uuid, 1 ]

    client-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.three ]
        - [ X-Request, third ]
    proxy-request:
      version: "1.1"
      scheme: "http"
      method: "GET"
      url: "/same/path"
      headers:
        fields:
        - [ Host, host.three ]
        - [ X-Request, { value: third, as: equal } ]
    server-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, three ]
    proxy-response:
      status: 200
      reason: OK
      content:
        size: 0
      headers:
        fields:
        - [ Content-Type, text/html ]
        - [ Content-Length, 0 ]
        - [ X-Response, { value: three, as: equal } ]
